{"version":3,"sources":["../../src/pages/live-stream/live-stream.module.ts","../../node_modules/@ionic-native/streaming-media/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACD;AACgB;AAW/D;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAThC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAc;aACf;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,oEAAc,CAAC;aACzC;YACD,SAAS,EAAE,CAAC,qFAAc,CAAC;SAC5B,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;ACdjC;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC6B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wCAAwC;AACnD;AACA,wDAAwD;AACxD;AACA;AACA,6BAA6B,8BAA8B;AAC3D,4BAA4B,iCAAiC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA,0BAA0B,OAAO;AACjC,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACA,0BAA0B,OAAO;AACjC,yBAAyB,sBAAsB;AAC/C;AACA,kCAAkC;AAClC;AACA;AACA,wBAAwB,OAAO;AAC/B,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA,0BAA0B,OAAO;AACjC,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACA,0BAA0B,OAAO;AACjC,yBAAyB,sBAAsB;AAC/C;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,yDAAU,EAAE;AAC5B;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,iCAAiC;AAClD;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,iCAAiC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wCAAwC;AACvD;AACA,4DAA4D;AAC5D;AACA;AACA,iCAAiC,8BAA8B;AAC/D,gCAAgC,iCAAiC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAM;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,6EAAiB;AACO;AAC1B,iC","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LiveStreamPage } from './live-stream';\nimport { StreamingMedia } from '@ionic-native/streaming-media';\n\n@NgModule({\n  declarations: [\n    LiveStreamPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LiveStreamPage),\n  ],\n  providers: [StreamingMedia]\n})\nexport class LiveStreamPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/live-stream/live-stream.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n/**\n * @name Streaming Media\n * @description\n * This plugin allows you to stream audio and video in a fullscreen, native player on iOS and Android.\n *\n * @usage\n * ```typescript\n * import { StreamingMedia, StreamingVideoOptions } from '@ionic-native/streaming-media';\n *\n * constructor(private streamingMedia: StreamingMedia) { }\n *\n * let options: StreamingVideoOptions = {\n *   successCallback: () => { console.log('Video played') },\n *   errorCallback: (e) => { console.log('Error streaming') },\n *   orientation: 'landscape',\n *   shouldAutoClose: true,\n *   controls: false\n * };\n *\n * this.streamingMedia.playVideo('https://path/to/video/stream', options);\n *\n * ```\n * @interfaces\n * StreamingVideoOptions\n * StreamingAudioOptions\n */\nvar StreamingMedia = (function (_super) {\n    __extends(StreamingMedia, _super);\n    function StreamingMedia() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Streams a video\n     * @param videoUrl {string} The URL of the video\n     * @param options {StreamingVideoOptions} Options\n     */\n    /**\n       * Streams a video\n       * @param videoUrl {string} The URL of the video\n       * @param options {StreamingVideoOptions} Options\n       */\n    StreamingMedia.prototype.playVideo = /**\n       * Streams a video\n       * @param videoUrl {string} The URL of the video\n       * @param options {StreamingVideoOptions} Options\n       */\n    function (videoUrl, options) { };\n    /**\n     * Streams an audio\n     * @param audioUrl {string} The URL of the audio stream\n     * @param options {StreamingAudioOptions} Options\n     */\n    /**\n       * Streams an audio\n       * @param audioUrl {string} The URL of the audio stream\n       * @param options {StreamingAudioOptions} Options\n       */\n    StreamingMedia.prototype.playAudio = /**\n       * Streams an audio\n       * @param audioUrl {string} The URL of the audio stream\n       * @param options {StreamingAudioOptions} Options\n       */\n    function (audioUrl, options) { };\n    /**\n     * Stops streaming audio\n     */\n    /**\n       * Stops streaming audio\n       */\n    StreamingMedia.prototype.stopAudio = /**\n       * Stops streaming audio\n       */\n    function () { };\n    /**\n     * Pauses streaming audio\n     */\n    /**\n       * Pauses streaming audio\n       */\n    StreamingMedia.prototype.pauseAudio = /**\n       * Pauses streaming audio\n       */\n    function () { };\n    /**\n     * Resumes streaming audio\n     */\n    /**\n       * Resumes streaming audio\n       */\n    StreamingMedia.prototype.resumeAudio = /**\n       * Resumes streaming audio\n       */\n    function () { };\n    StreamingMedia.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], StreamingMedia.prototype, \"playVideo\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], StreamingMedia.prototype, \"playAudio\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], StreamingMedia.prototype, \"stopAudio\", null);\n    __decorate([\n        Cordova({ sync: true, platforms: ['iOS'] }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], StreamingMedia.prototype, \"pauseAudio\", null);\n    __decorate([\n        Cordova({ sync: true, platforms: ['iOS'] }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], StreamingMedia.prototype, \"resumeAudio\", null);\n    /**\n     * @name Streaming Media\n     * @description\n     * This plugin allows you to stream audio and video in a fullscreen, native player on iOS and Android.\n     *\n     * @usage\n     * ```typescript\n     * import { StreamingMedia, StreamingVideoOptions } from '@ionic-native/streaming-media';\n     *\n     * constructor(private streamingMedia: StreamingMedia) { }\n     *\n     * let options: StreamingVideoOptions = {\n     *   successCallback: () => { console.log('Video played') },\n     *   errorCallback: (e) => { console.log('Error streaming') },\n     *   orientation: 'landscape',\n     *   shouldAutoClose: true,\n     *   controls: false\n     * };\n     *\n     * this.streamingMedia.playVideo('https://path/to/video/stream', options);\n     *\n     * ```\n     * @interfaces\n     * StreamingVideoOptions\n     * StreamingAudioOptions\n     */\n    StreamingMedia = __decorate([\n        Plugin({\n            pluginName: 'StreamingMedia',\n            plugin: 'cordova-plugin-streaming-media',\n            pluginRef: 'plugins.streamingMedia',\n            repo: 'https://github.com/nchutchind/cordova-plugin-streaming-media',\n            platforms: ['Amazon Fire OS', 'Android', 'iOS']\n        })\n    ], StreamingMedia);\n    return StreamingMedia;\n}(IonicNativePlugin));\nexport { StreamingMedia };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/streaming-media/index.js\n// module id = 838\n// module chunks = 0"],"sourceRoot":""}